export declare const rulesConvertors: {
    file(key: string, optional: boolean): string;
    number(key: string): string;
    nullable(): string;
    boolean(key: string): string;
    string(key: string): string;
    object(key: string, values: string[], optional: boolean): string;
    array(key: string, values: string[], optional: boolean): string;
    integer(key: string): string;
    uuid(key: string): string;
    url(key: string): string;
    email(key: string): string;
    ip(key: string): string;
    ipv4(key: string): string;
    ipv6(key: string): string;
    alpha(key: string): string;
    alpha_ascii(key: string): string;
    alpha_dash(key: string): string;
    alpha_dash_ascii(key: string): string;
    alpha_num(key: string): string;
    alpha_num_ascii(key: string): string;
    min(key: string, value: string[], type: string): string;
    max(key: string, value: string[], type: string): string;
    between(key: string, values: [string, string], type: string): string;
    contains(key: string, values: string[]): string;
    doesnt_contain(key: string, values: string[]): string;
    accepted(key: string): string;
    declined(key: string): string;
    in(key: string, values: string[]): string;
    not_in(key: string, values: string[]): string;
    doesnt_start_with(key: string, values: string[]): string;
    doesnt_end_with(key: string, values: string[]): string;
    starts_with(key: string, values: string[]): string;
    ends_with(key: string, values: string[]): string;
    digits(key: string, value: string[]): string;
    max_digits(key: string, value: string[]): string;
    min_digits(key: string, value: string[]): string;
    digits_between(key: string, value: string[]): string;
    mimes(key: string, value: string[]): string;
    extensions(key: string, value: string[]): string;
    image(key: string): string;
    decimal(key: string, value: string[]): string;
    distinct(key: string, value: string[]): string | undefined;
    hex_color(key: string, value: string[]): string;
    lowercase(key: string, value: string[]): string;
    multiple_of(key: string, value: string[]): string;
};
export declare const objectConvertors: {
    in_array(key: string, value: string[], type: string): string;
    filled(key: string, value: string[], type: string): string;
    present(key: string, value: string[], type: string): string;
    confirmed(key: string, value: string[], type: string): string;
    accepted_if(key: string, value: string[], type: string): string;
    declined_if(key: string, value: string[], type: string): string;
    different(key: string, value: string[], type: string): string;
    same(key: string, value: string[], type: string): string;
    gt(key: string, value: string[], type: string): string;
    lt(key: string, value: string[], type: string): string;
    gte(key: string, value: string[], type: string): string;
    lte(key: string, value: string[], type: string): string;
};
